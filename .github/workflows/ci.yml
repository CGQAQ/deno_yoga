name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Run deno fmt
        run: deno fmt --check

      - name: Run deno lint
        run: deno lint

      - name: Run deno test
        if: matrix.os == 'macOS-latest'
        run: |
          curl --fail --location --output lib/libyogacore.dylib https://github.com/justjavac/yoga.dll/raw/main/lib/libyogacore.dylib
          deno test --allow-ffi --unstable

      - name: Run deno test
        if: matrix.os == 'ubuntu-latest'
        run: |
          curl --fail --location --output lib/libyogacore.so https://github.com/justjavac/yoga.dll/raw/main/lib/libyogacore.so
          deno test --allow-ffi --unstable

      - name: Run deno test
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest https://github.com/justjavac/yoga.dll/raw/main/lib/yogacore.dll -OutFile lib/libyogacore.so -UseBasicParsing
          deno test --allow-ffi --unstable
